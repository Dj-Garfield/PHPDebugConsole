.m_assert,
.m_clear,
.m_count,
.m_error,
.m_groupEndValue,
.m_info,
.m_log,
.m_warn {
  // We use display: table so that background-color doesn't fill entire width;
  position: relative;
  display: table;
  padding-left: 10px;
  text-indent: -10px;
  padding-right: 0.33em;
  word-break: break-word;
}
.m_table td,
.m_trace td {
  word-break: break-word;
}
.m_assert { background-color: rgba(255, 204, 204, 0.75); }
.m_group {
  .group-header {
    display: table;
    white-space: nowrap;
  }
  .group-label-bold { font-weight: bold; }
  > ul {
    list-style: none;
    margin-left: 1em;
    border-left: 1px solid rgba(0, 0, 0, 0.25);
    padding-left: 0.25rem;
  }
}

.m_error,
:not(.expanded) > .level-error {
  background-color: $error-bg;
  color: $error-fg;
}

.m_info,
:not(.expanded) > .level-info {
  background-color: $info-bg;
  color: $info-fg;
}

.m_warn,
:not(.expanded) > .level-warn {
  background-color: $warn-bg;
  color: $warn-fg;
}

li[data-channel="general.phpError"] {
  > .t_string:nth-child(2) { font-weight: bold; }
  > .t_string:nth-child(4) {
    opacity: 0.7;
    &::before {
      content: "\A";
    }
  }

  &.error-fatal {
    padding: 10px 10px 10px 20px; // extra left padding for text-indent
    border-left: solid 2px $error-fg;
    > .t_string:nth-child(2) {
      display: inline-block;
      margin-bottom: 5px;
      vertical-align: top;
      font-size: 1.2em;
    }
    > .t_string:nth-child(3)::before {
      content: "\A"
    }
  }
}
